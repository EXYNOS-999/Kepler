------------------------------------------------------------------------
Source Code for NASA's Kepler Mission (jasonfrowe@gmail.com)
------------------------------------------------------------------------
!!!NEW!!! - There are now Python wrappers for some subroutines, ask for
            details. 

Requires:  X11,PGPlot,CFITSIO libraries (-lX11 -lpgplot -lcfitsio)
**If you use OS/X I recommend 'homebrew' to install pgplot and cfitsio
  and XQuartz for X11.
**If you are a Linux fan, either use your favourite package installer
  (e.g., yum) or install pgplot/cfitsio from source.  

------------------------------------------------------------------------
Quick INSTALL:

 ./configure
 make

This should make binaries in the 'bin' directory.

**I'm new to using autoconf, so if you run into trouble - let me know.
------------------------------------------------------------------------

If you find these codes useful please reference:
Rowe et al. 2014 ApJ, 784, 45  
Rowe et al. 2015 ApJs, 217, 16

Full documentation is a work in progress, but for now, have a look at
the 'example' directory to get a start.  I can also recommend:

Uniform Modeling of KOIs: MCMC Data Release Notes 
http://adsabs.harvard.edu/abs/2015arXiv150400707R

As a good resource to understand the file formats.

------------------------------------------------------------------------

TRANSITFIT5 - used to model planetary transits based on Kepler photometry
 -handles multi-planets, RVs and TTVs and deMCMC framework for posteriors. 
 
   transitfit5: Uses Levenberg-Marquardt to fit a transit-model to 
   photometry
   
   transitmcmc5: Uses deMCMC style MCMC to produce Markov-Chains for a 
   transit-model
   
   transitsn5: estimates S/N of transit based on transit model
   
   transittiming5: calculates center of transit-times based on folded 
   transit-model
   
   prdump5: data-dump routine for XML style output
   
   mcmcsetup: estimates Gibbs sampler factors to initialize MCMC routines
   
   transitdepth5: estimate transit-depth from a transit-model
   
   transitcut5: cuts out all observes beyond +/- 1 transit duration
   
   datadump5: removes all but one planet from a lightcurve (for 
   multi-planet systems)
   
   transitdur5: estimates transit-duration from a transit-model 
    
   transitremove5: removes transit-model from a light-curve
   
   transitchisq5: estimates chi-square from lightcurve and transit-model
   
   transitsigclip5: uses 3-sigma clipping to remove outliers based on 
   transit-model fit
   
   plottimeseries: makes a plot of the time-series and marks location of 
   transits
   
   transitplot5: plots the folded lightcurve and transit model
   
   mcmchistnew: produces histogram of a Markov-Chain and estimates 
   median and posteriors
   
   mcmchist5: produces histogram of a Markov-Chain and estimates 
   median and posteriors and uses stellar-parameter MCs to get absolute 
   planet posteriors (e.g. Mp, Rp)
   
   mcmchist5bf: same as mcmchist5 but use best-fit for center of 
   posterior
   
 TRANSITFIND - used to find transits or inverted transits in photometry.
  
   transitfind2: Uses an optimized BLS to search for transits/lensing in 
   lightcurves
   
 DATATEST - routines to read FITS files retrieved from MAST and 
 detrending
   
   detrend5: detrends lightcurves but preserves transit using a 
   transit-model
   
   kfitsread: reads Kepler data FITS files from MAST 
   
   sigclip: simple sigma-clip routine 
   
   freqremove: Given a Fourier-decomposition solution, removes from 
   lightcurve
   
 PERIOD - routines to calculate discrete Fourier transforms and Fourier
 decomposition
 
   keplerper: calculates a discrete Fourier transforms of photometric 
   data.  Can be unevenly sampled.  Automatically calculates a Fourier
   decomposition that can be used by 'freqremove' 
   
   ttper: same as keplerper but works with 'tt' files that come from a 
   transting timing analysis outputted by 'transittiming5'
   
   freqmod: uses Fourier decomposition to fit for phase-changes of the 
   frequency solution.  This behaviour will be seen in a binary system 
   with one or more components pulsating.  The motion of the pulsator 
   around the center of mass produces a timing delay in the observed 
   pulsations.
   
RHOSTAR - routines to calculate stellar parameters and posteriors 

   rhostar: given some combination of Teff, log(g), [Fe/H] and rhostar
   estimate M*, R*, L and Age using the Yale-Yonsei Isochrones and 
   output Markov-Chains.
   
   rhoboot2: displays histograms of Markov-Chain output from rhostar and
   calculate posterior distibutions of stellar parameters
   
   rhorand: simulate output of rhostar.
   
   